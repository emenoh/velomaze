function thresholded(e,t){return thresholded||(t=.005),e>-t&&e<t?0:e}function checkBallHole(e,t,n){var r=$V([t.x,t.y]),i=$V([e.x,e.y]);i.distanceFrom(r)<t.r&&n(i)}function impactBallByWall(e,t){var n=$V([e.x,e.y]),r=Line.Segment.create($V([t.sx,t.sy]),$V([t.dx,t.dy])),i=r.pointClosestTo(n).to2D(),s=i.distanceFrom(n);if(s<e.r){var o=.01,u=i.subtract(n),a=u.multiply(1/s),f=e.r-s,l=a.multiply(f/o),c=$V([e.vx,e.vy]),h=c.dot(a);if(h>=0){var p=a.multiply(-1.4*h/o),d=$V([e.vx,e.vy]).add(p.multiply(o));e.vx=d.e(1),e.vy=d.e(2)}}}function rotateLogo(e){var t=$("#logo").width(),n=Math.PI*t,r=e*36e8/n;$("#logo").css("transform","rotate("+r+"deg)")}var maze;$(function(){function a(){for(var s=0;s<u.length;s++){var a=u[s];if(!a.dropped){a.element||(a.element=maze.makeSpriteElement('<div id="ball"><div id="logo"></div><div id="shadow"></div></div>â€‹',a),$("#status").html("You got a ball! take it to the right lower corner!")),a.vx+=thresholded(Math.sin(n)/5),a.vy+=thresholded(Math.sin(t)/5),a.vx=thresholded(a.vx*.95),a.vy=thresholded(a.vy*.95);for(var s=0;s<i.length;s++)checkBallHole(a,i[s],function(t){a.dropped=!0,a.x=t.e(1),a.y=t.e(2),a.element.animate({opacity:0,left:i[s].element.css("left"),top:i[s].element.css("top")},700),i[s].goal?e.emit("success"):e.emit("failure")});for(var s=0;s<r.length;s++)impactBallByWall(a,r[s]);a.x+=thresholded(a.vx),a.y+=thresholded(a.vy);var f=Math.sqrt(Math.pow(thresholded(a.vx),2)+Math.pow(thresholded(a.vy),2));maze.setElementPosition(a.element,a.x,a.y),rotateLogo(f)}}o++}var e=io.connect(document.location.origin),t=0,n=0;maze={element:$("#maze"),rows:10,cols:10,getSquareWidth:function(){return Math.min(maze.element.width(),maze.element.height())/maze.cols},getSquareHeigth:function(){return Math.min(maze.element.width(),maze.element.height())/maze.rows},setElementPosition:function(e,t,n){var r=t*maze.getSquareWidth()-e.width()/2,i=n*maze.getSquareHeigth()-e.height()/2;thresholded(e.css("left")-r,5)!==0&&e.css("left",parseInt(r)+"px"),thresholded(e.css("top")-i,5)!==0&&e.css("top",parseInt(i)+"px")},makeSpriteElement:function(e,t){var n=$(e);return t.element=n,t.width=maze.getSquareWidth()*t.r*2,t.height=maze.getSquareHeigth()*t.r*2,n.css("position","absolute"),n.css("width",t.width+"px"),n.css("height",t.height+"px"),maze.setElementPosition(n,t.x,t.y),maze.element.append(n),n}},window.onresize=function(){var e=$("img[src='/images/hole.png']");for(var t=0;t<e.length;t++){var n=$(e[t]);maze.setElementPosition(n,i[t].x,i[t].y),n.css("width",maze.getSquareWidth()),n.css("height",maze.getSquareHeigth())}var r=$("div.ball");r.css("width",maze.getSquareWidth()),r.css("height",maze.getSquareHeigth())};var r=[{sx:0,sy:0,dx:10,dy:0},{sx:0,sy:10,dx:10,dy:10},{sx:10,sy:0,dx:10,dy:10},{sx:0,sy:0,dx:0,dy:10},{sx:0,sy:5,dx:4,dy:5},{sx:4,sy:5,dx:4,dy:2},{sx:4,sy:8,dx:4,dy:10},{sx:2,sy:3,dx:2,dy:0},{sx:2,sy:9,dx:2,dy:7},{sx:2,sy:7,dx:6,dy:7},{sx:6,sy:0,dx:6,dy:9},{sx:8,sy:2,dx:8,dy:10}],i=[{x:3.35,y:1.35,r:.5},{x:3.35,y:6.35,r:.5},{x:5.35,y:7.55,r:.5},{x:6.65,y:5.35,r:.5},{x:7.45,y:3.35,r:.5},{x:7.45,y:7.35,r:.5},{x:9.35,y:9.35,r:.5,goal:!0}];for(var s=0;s<i.length;s++)maze.makeSpriteElement('<img src="/images/hole.png">',i[s]);var o=0,u=[];window.DeviceOrientationEvent?window.addEventListener("deviceorientation",function(e){n=e.gamma/90*Math.PI/2,t=e.beta/90*Math.PI/2},!1):window.OrientationEvent?window.addEventListener("MozOrientation",function(e){n=e.x*Math.PI/2,t=e.y*Math.PI/2},!1):$("#status").html("Your device does not support orientation reading. Please use Android 4.0 or later, iOS (MBP laptop is fine) or similar platform.");var f=function(){var e={x:1,y:1,vx:0,vy:0,r:.5};return e};e.on("connect",function(){u.push(f())}),e.on("reset",function(){u.push(f())}),e.on("game_over",function(){alert("Game over! Velociraptor is sad.")}),window.setInterval(function(){a()},100)});var Sylvester={precision:1e-6};Sylvester.Vector=function(){},Sylvester.Vector.create=function(e){var t=new Sylvester.Vector;return t.setElements(e)};var $V=Sylvester.Vector.create;Sylvester.Vector.Random=function(e){var t=[];while(e--)t.push(Math.random());return Sylvester.Vector.create(t)},Sylvester.Vector.Zero=function(e){var t=[];while(e--)t.push(0);return Sylvester.Vector.create(t)},Sylvester.Vector.prototype={e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},dimensions:function(){return this.elements.length},modulus:function(){return Math.sqrt(this.dot(this))},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;while(t--)if(Math.abs(this.elements[t]-n[t])>Sylvester.precision)return!1;return!0},dup:function(){return Sylvester.Vector.create(this.elements)},map:function(e,t){var n=[];return this.each(function(r,i){n.push(e.call(t,r,i))}),Sylvester.Vector.create(n)},forEach:function(e,t){var n=this.elements.length;for(var r=0;r<n;r++)e.call(t,this.elements[r],r+1)},toUnitVector:function(){var e=this.modulus();return e===0?this.dup():this.map(function(t){return t/e})},angleFrom:function(e){var t=e.elements||e,n=this.elements.length,r=n,i;if(n!==t.length)return null;var s=0,o=0,u=0;this.each(function(e,n){s+=e*t[n-1],o+=e*e,u+=t[n-1]*t[n-1]}),o=Math.sqrt(o),u=Math.sqrt(u);if(o*u===0)return null;var a=s/(o*u);return a<-1&&(a=-1),a>1&&(a=1),Math.acos(a)},isParallelTo:function(e){var t=this.angleFrom(e);return t===null?null:t<=Sylvester.precision},isAntiparallelTo:function(e){var t=this.angleFrom(e);return t===null?null:Math.abs(t-Math.PI)<=Sylvester.precision},isPerpendicularTo:function(e){var t=this.dot(e);return t===null?null:Math.abs(t)<=Sylvester.precision},add:function(e){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(e,n){return e+t[n-1]})},subtract:function(e){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(e,n){return e-t[n-1]})},multiply:function(e){return this.map(function(t){return t*e})},dot:function(e){var t=e.elements||e,n,r=0,i=this.elements.length;if(i!==t.length)return null;while(i--)r+=this.elements[i]*t[i];return r},cross:function(e){var t=e.elements||e;if(this.elements.length!==3||t.length!==3)return null;var n=this.elements;return Sylvester.Vector.create([n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]])},max:function(){var e=0,t=this.elements.length;while(t--)Math.abs(this.elements[t])>Math.abs(e)&&(e=this.elements[t]);return e},indexOf:function(e){var t=null,n=this.elements.length;for(var r=0;r<n;r++)t===null&&this.elements[r]===e&&(t=r+1);return t},toDiagonalMatrix:function(){return Sylvester.Matrix.Diagonal(this.elements)},round:function(){return this.map(function(e){return Math.round(e)})},snapTo:function(e){return this.map(function(t){return Math.abs(t-e)<=Sylvester.precision?e:t})},distanceFrom:function(e){if(e.anchor||e.start&&e.end)return e.distanceFrom(this);var t=e.elements||e;if(t.length!==this.elements.length)return null;var n=0,r;return this.each(function(e,i){r=e-t[i-1],n+=r*r}),Math.sqrt(n)},liesOn:function(e){return e.contains(this)},liesIn:function(e){return e.contains(this)},rotate:function(e,t){var n,r=null,i,s,o;e.determinant&&(r=e.elements);switch(this.elements.length){case 2:n=t.elements||t;if(n.length!==2)return null;return r||(r=Sylvester.Matrix.Rotation(e).elements),i=this.elements[0]-n[0],s=this.elements[1]-n[1],Sylvester.Vector.create([n[0]+r[0][0]*i+r[0][1]*s,n[1]+r[1][0]*i+r[1][1]*s]);case 3:if(!t.direction)return null;var u=t.pointClosestTo(this).elements;return r||(r=Sylvester.Matrix.Rotation(e,t.direction).elements),i=this.elements[0]-u[0],s=this.elements[1]-u[1],o=this.elements[2]-u[2],Sylvester.Vector.create([u[0]+r[0][0]*i+r[0][1]*s+r[0][2]*o,u[1]+r[1][0]*i+r[1][1]*s+r[1][2]*o,u[2]+r[2][0]*i+r[2][1]*s+r[2][2]*o]);default:return null}},reflectionIn:function(e){if(e.anchor){var t=this.elements.slice(),n=e.pointClosestTo(t).elements;return Sylvester.Vector.create([n[0]+(n[0]-t[0]),n[1]+(n[1]-t[1]),n[2]+(n[2]-(t[2]||0))])}var r=e.elements||e;return this.elements.length!==r.length?null:this.map(function(e,t){return r[t-1]+(r[t-1]-e)})},to3D:function(){var e=this.dup();switch(e.elements.length){case 3:break;case 2:e.elements.push(0);break;default:return null}return e},to2D:function(){var e=this.dup();switch(e.elements.length){case 3:e.elements.pop();break;case 2:break;default:return null}return e},inspect:function(){return"["+this.elements.join(", ")+"]"},setElements:function(e){return this.elements=(e.elements||e).slice(),this}},Sylvester.Vector.prototype.x=Sylvester.Vector.prototype.multiply,Sylvester.Vector.prototype.each=Sylvester.Vector.prototype.forEach,Sylvester.Vector.i=Sylvester.Vector.create([1,0,0]),Sylvester.Vector.j=Sylvester.Vector.create([0,1,0]),Sylvester.Vector.k=Sylvester.Vector.create([0,0,1]),Sylvester.Matrix=function(){},Sylvester.Matrix.create=function(e){var t=new Sylvester.Matrix;return t.setElements(e)};var $M=Sylvester.Matrix.create;Sylvester.Matrix.I=function(e){var t=[],n=e,r;while(n--){r=e,t[n]=[];while(r--)t[n][r]=n===r?1:0}return Sylvester.Matrix.create(t)},Sylvester.Matrix.Diagonal=function(e){var t=e.length,n=Sylvester.Matrix.I(t);while(t--)n.elements[t][t]=e[t];return n},Sylvester.Matrix.Rotation=function(e,t){if(!t)return Sylvester.Matrix.create([[Math.cos(e),-Math.sin(e)],[Math.sin(e),Math.cos(e)]]);var n=t.dup();if(n.elements.length!==3)return null;var r=n.modulus(),i=n.elements[0]/r,s=n.elements[1]/r,o=n.elements[2]/r,u=Math.sin(e),a=Math.cos(e),f=1-a;return Sylvester.Matrix.create([[f*i*i+a,f*i*s-u*o,f*i*o+u*s],[f*i*s+u*o,f*s*s+a,f*s*o-u*i],[f*i*o-u*s,f*s*o+u*i,f*o*o+a]])},Sylvester.Matrix.RotationX=function(e){var t=Math.cos(e),n=Math.sin(e);return Sylvester.Matrix.create([[1,0,0],[0,t,-n],[0,n,t]])},Sylvester.Matrix.RotationY=function(e){var t=Math.cos(e),n=Math.sin(e);return Sylvester.Matrix.create([[t,0,n],[0,1,0],[-n,0,t]])},Sylvester.Matrix.RotationZ=function(e){var t=Math.cos(e),n=Math.sin(e);return Sylvester.Matrix.create([[t,-n,0],[n,t,0],[0,0,1]])},Sylvester.Matrix.Random=function(e,t){return Sylvester.Matrix.Zero(e,t).map(function(){return Math.random()})},Sylvester.Matrix.Zero=function(e,t){var n=[],r=e,i;while(r--){i=t,n[r]=[];while(i--)n[r][i]=0}return Sylvester.Matrix.create(n)},Sylvester.Matrix.prototype={e:function(e,t){return e<1||e>this.elements.length||t<1||t>this.elements[0].length?null:this.elements[e-1][t-1]},row:function(e){return e>this.elements.length?null:Sylvester.Vector.create(this.elements[e-1])},col:function(e){if(this.elements.length===0)return null;if(e>this.elements[0].length)return null;var t=[],n=this.elements.length;for(var r=0;r<n;r++)t.push(this.elements[r][e-1]);return Sylvester.Vector.create(t)},dimensions:function(){var e=this.elements.length===0?0:this.elements[0].length;return{rows:this.elements.length,cols:e}},rows:function(){return this.elements.length},cols:function(){return this.elements.length===0?0:this.elements[0].length},eql:function(e){var t=e.elements||e;if(!t[0]||typeof t[0][0]=="undefined")t=Sylvester.Matrix.create(t).elements;if(this.elements.length===0||t.length===0)return this.elements.length===t.length;if(this.elements.length!==t.length)return!1;if(this.elements[0].length!==t[0].length)return!1;var n=this.elements.length,r=this.elements[0].length,i;while(n--){i=r;while(i--)if(Math.abs(this.elements[n][i]-t[n][i])>Sylvester.precision)return!1}return!0},dup:function(){return Sylvester.Matrix.create(this.elements)},map:function(e,t){if(this.elements.length===0)return Sylvester.Matrix.create([]);var n=[],r=this.elements.length,i=this.elements[0].length,s;while(r--){s=i,n[r]=[];while(s--)n[r][s]=e.call(t,this.elements[r][s],r+1,s+1)}return Sylvester.Matrix.create(n)},isSameSizeAs:function(e){var t=e.elements||e;return typeof t[0][0]=="undefined"&&(t=Sylvester.Matrix.create(t).elements),this.elements.length===0?t.length===0:this.elements.length===t.length&&this.elements[0].length===t[0].length},add:function(e){if(this.elements.length===0)return this.map(function(e){return e});var t=e.elements||e;return typeof t[0][0]=="undefined"&&(t=Sylvester.Matrix.create(t).elements),this.isSameSizeAs(t)?this.map(function(e,n,r){return e+t[n-1][r-1]}):null},subtract:function(e){if(this.elements.length===0)return this.map(function(e){return e});var t=e.elements||e;return typeof t[0][0]=="undefined"&&(t=Sylvester.Matrix.create(t).elements),this.isSameSizeAs(t)?this.map(function(e,n,r){return e-t[n-1][r-1]}):null},canMultiplyFromLeft:function(e){if(this.elements.length===0)return!1;var t=e.elements||e;return typeof t[0][0]=="undefined"&&(t=Sylvester.Matrix.create(t).elements),this.elements[0].length===t.length},multiply:function(e){if(this.elements.length===0)return null;if(!e.elements)return this.map(function(t){return t*e});var t=e.modulus?!0:!1,n=e.elements||e;typeof n[0][0]=="undefined"&&(n=Sylvester.Matrix.create(n).elements);if(!this.canMultiplyFromLeft(n))return null;var r=this.elements.length,i=n[0].length,s,o=this.elements[0].length,u,a=[],f;while(r--){s=i,a[r]=[];while(s--){u=o,f=0;while(u--)f+=this.elements[r][u]*n[u][s];a[r][s]=f}}var n=Sylvester.Matrix.create(a);return t?n.col(1):n},minor:function(e,t,n,r){if(this.elements.length===0)return null;var i=[],s=n,o,u,a,f=this.elements.length,l=this.elements[0].length;while(s--){o=n-s-1,i[o]=[],u=r;while(u--)a=r-u-1,i[o][a]=this.elements[(e+o-1)%f][(t+a-1)%l]}return Sylvester.Matrix.create(i)},transpose:function(){if(this.elements.length===0)return Sylvester.Matrix.create([]);var e=this.elements.length,t,n=this.elements[0].length,r,i=[],t=n;while(t--){r=e,i[t]=[];while(r--)i[t][r]=this.elements[r][t]}return Sylvester.Matrix.create(i)},isSquare:function(){var e=this.elements.length===0?0:this.elements[0].length;return this.elements.length===e},max:function(){if(this.elements.length===0)return null;var e=0,t=this.elements.length,n=this.elements[0].length,r;while(t--){r=n;while(r--)Math.abs(this.elements[t][r])>Math.abs(e)&&(e=this.elements[t][r])}return e},indexOf:function(e){if(this.elements.length===0)return null;var t=null,n=this.elements.length,r,i=this.elements[0].length,s;for(r=0;r<n;r++)for(s=0;s<i;s++)if(this.elements[r][s]===e)return{i:r+1,j:s+1};return null},diagonal:function(){if(!this.isSquare)return null;var e=[],t=this.elements.length;for(var n=0;n<t;n++)e.push(this.elements[n][n]);return Sylvester.Vector.create(e)},toRightTriangular:function(){if(this.elements.length===0)return Sylvester.Matrix.create([]);var e=this.dup(),t,n=this.elements.length,r,i,s=this.elements[0].length,o;for(r=0;r<n;r++){if(e.elements[r][r]===0)for(i=r+1;i<n;i++)if(e.elements[i][r]!==0){t=[];for(o=0;o<s;o++)t.push(e.elements[r][o]+e.elements[i][o]);e.elements[r]=t;break}if(e.elements[r][r]!==0)for(i=r+1;i<n;i++){var u=e.elements[i][r]/e.elements[r][r];t=[];for(o=0;o<s;o++)t.push(o<=r?0:e.elements[i][o]-e.elements[r][o]*u);e.elements[i]=t}}return e},determinant:function(){if(this.elements.length===0)return 1;if(!this.isSquare())return null;var e=this.toRightTriangular(),t=e.elements[0][0],n=e.elements.length;for(var r=1;r<n;r++)t*=e.elements[r][r];return t},isSingular:function(){return this.isSquare()&&this.determinant()===0},trace:function(){if(this.elements.length===0)return 0;if(!this.isSquare())return null;var e=this.elements[0][0],t=this.elements.length;for(var n=1;n<t;n++)e+=this.elements[n][n];return e},rank:function(){if(this.elements.length===0)return 0;var e=this.toRightTriangular(),t=0,n=this.elements.length,r=this.elements[0].length,i;while(n--){i=r;while(i--)if(Math.abs(e.elements[n][i])>Sylvester.precision){t++;break}}return t},augment:function(e){if(this.elements.length===0)return this.dup();var t=e.elements||e;typeof t[0][0]=="undefined"&&(t=Sylvester.Matrix.create(t).elements);var n=this.dup(),r=n.elements[0].length,i=n.elements.length,s=t[0].length,o;if(i!==t.length)return null;while(i--){o=s;while(o--)n.elements[i][r+o]=t[i][o]}return n},inverse:function(){if(this.elements.length===0)return null;if(!this.isSquare()||this.isSingular())return null;var e=this.elements.length,t=e,n,r=this.augment(Sylvester.Matrix.I(e)).toRightTriangular(),i=r.elements[0].length,s,o,u,a=[],f;while(t--){o=[],a[t]=[],u=r.elements[t][t];for(s=0;s<i;s++)f=r.elements[t][s]/u,o.push(f),s>=e&&a[t].push(f);r.elements[t]=o,n=t;while(n--){o=[];for(s=0;s<i;s++)o.push(r.elements[n][s]-r.elements[t][s]*r.elements[n][t]);r.elements[n]=o}}return Sylvester.Matrix.create(a)},round:function(){return this.map(function(e){return Math.round(e)})},snapTo:function(e){return this.map(function(t){return Math.abs(t-e)<=Sylvester.precision?e:t})},inspect:function(){var e=[],t=this.elements.length;if(t===0)return"[]";for(var n=0;n<t;n++)e.push(Sylvester.Vector.create(this.elements[n]).inspect());return e.join("\n")},setElements:function(e){var t,n,r=e.elements||e;if(r[0]&&typeof r[0][0]!="undefined"){t=r.length,this.elements=[];while(t--){n=r[t].length,this.elements[t]=[];while(n--)this.elements[t][n]=r[t][n]}return this}var i=r.length;this.elements=[];for(t=0;t<i;t++)this.elements.push([r[t]]);return this}},Sylvester.Matrix.prototype.toUpperTriangular=Sylvester.Matrix.prototype.toRightTriangular,Sylvester.Matrix.prototype.det=Sylvester.Matrix.prototype.determinant,Sylvester.Matrix.prototype.tr=Sylvester.Matrix.prototype.trace,Sylvester.Matrix.prototype.rk=Sylvester.Matrix.prototype.rank,Sylvester.Matrix.prototype.inv=Sylvester.Matrix.prototype.inverse,Sylvester.Matrix.prototype.x=Sylvester.Matrix.prototype.multiply,Sylvester.Line=function(){},Sylvester.Line.prototype={eql:function(e){return this.isParallelTo(e)&&this.contains(e.anchor)},dup:function(){return Sylvester.Line.create(this.anchor,this.direction)},translate:function(e){var t=e.elements||e;return Sylvester.Line.create([this.anchor.elements[0]+t[0],this.anchor.elements[1]+t[1],this.anchor.elements[2]+(t[2]||0)],this.direction)},isParallelTo:function(e){if(e.normal||e.start&&e.end)return e.isParallelTo(this);var t=this.direction.angleFrom(e.direction);return Math.abs(t)<=Sylvester.precision||Math.abs(t-Math.PI)<=Sylvester.precision},distanceFrom:function(e){if(e.normal||e.start&&e.end)return e.distanceFrom(this);if(e.direction){if(this.isParallelTo(e))return this.distanceFrom(e.anchor);var t=this.direction.cross(e.direction).toUnitVector().elements,n=this.anchor.elements,r=e.anchor.elements;return Math.abs((n[0]-r[0])*t[0]+(n[1]-r[1])*t[1]+(n[2]-r[2])*t[2])}var i=e.elements||e,n=this.anchor.elements,s=this.direction.elements,o=i[0]-n[0],u=i[1]-n[1],a=(i[2]||0)-n[2],f=Math.sqrt(o*o+u*u+a*a);if(f===0)return 0;var l=(o*s[0]+u*s[1]+a*s[2])/f,c=1-l*l;return Math.abs(f*Math.sqrt(c<0?0:c))},contains:function(e){if(e.start&&e.end)return this.contains(e.start)&&this.contains(e.end);var t=this.distanceFrom(e);return t!==null&&t<=Sylvester.precision},positionOf:function(e){if(!this.contains(e))return null;var t=e.elements||e,n=this.anchor.elements,r=this.direction.elements;return(t[0]-n[0])*r[0]+(t[1]-n[1])*r[1]+((t[2]||0)-n[2])*r[2]},liesIn:function(e){return e.contains(this)},intersects:function(e){return e.normal?e.intersects(this):!this.isParallelTo(e)&&this.distanceFrom(e)<=Sylvester.precision},intersectionWith:function(e){if(e.normal||e.start&&e.end)return e.intersectionWith(this);if(!this.intersects(e))return null;var t=this.anchor.elements,n=this.direction.elements,r=e.anchor.elements,i=e.direction.elements,s=n[0],o=n[1],u=n[2],a=i[0],f=i[1],l=i[2],c=t[0]-r[0],h=t[1]-r[1],p=t[2]-r[2],d=-s*c-o*h-u*p,v=a*c+f*h+l*p,m=s*s+o*o+u*u,g=a*a+f*f+l*l,y=s*a+o*f+u*l,b=(d*g/m+y*v)/(g-y*y);return Sylvester.Vector.create([t[0]+b*s,t[1]+b*o,t[2]+b*u])},pointClosestTo:function(e){if(e.start&&e.end){var t=e.pointClosestTo(this);return t===null?null:this.pointClosestTo(t)}if(e.direction){if(this.intersects(e))return this.intersectionWith(e);if(this.isParallelTo(e))return null;var n=this.direction.elements,r=e.direction.elements,i=n[0],s=n[1],o=n[2],u=r[0],a=r[1],f=r[2],l=o*u-i*f,c=i*a-s*u,h=s*f-o*a,p=[l*f-c*a,c*u-h*f,h*a-l*u],t=Sylvester.Plane.create(e.anchor,p);return t.intersectionWith(this)}var t=e.elements||e;if(this.contains(t))return Sylvester.Vector.create(t);var d=this.anchor.elements,n=this.direction.elements,i=n[0],s=n[1],o=n[2],v=d[0],m=d[1],g=d[2],l=i*(t[1]-m)-s*(t[0]-v),c=s*((t[2]||0)-g)-o*(t[1]-m),h=o*(t[0]-v)-i*((t[2]||0)-g),y=Sylvester.Vector.create([s*l-o*h,o*c-i*l,i*h-s*c]),b=this.distanceFrom(t)/y.modulus();return Sylvester.Vector.create([t[0]+y.elements[0]*b,t[1]+y.elements[1]*b,(t[2]||0)+y.elements[2]*b])},rotate:function(e,t){typeof t.direction=="undefined"&&(t=Sylvester.Line.create(t.to3D(),Sylvester.Vector.k));var n=Sylvester.Matrix.Rotation(e,t.direction).elements,r=t.pointClosestTo(this.anchor).elements,i=this.anchor.elements,s=this.direction.elements,o=r[0],u=r[1],a=r[2],f=i[0],l=i[1],c=i[2],h=f-o,p=l-u,d=c-a;return Sylvester.Line.create([o+n[0][0]*h+n[0][1]*p+n[0][2]*d,u+n[1][0]*h+n[1][1]*p+n[1][2]*d,a+n[2][0]*h+n[2][1]*p+n[2][2]*d],[n[0][0]*s[0]+n[0][1]*s[1]+n[0][2]*s[2],n[1][0]*s[0]+n[1][1]*s[1]+n[1][2]*s[2],n[2][0]*s[0]+n[2][1]*s[1]+n[2][2]*s[2]])},reverse:function(){return Sylvester.Line.create(this.anchor,this.direction.x(-1))},reflectionIn:function(e){if(e.normal){var t=this.anchor.elements,n=this.direction.elements,r=t[0],i=t[1],s=t[2],o=n[0],u=n[1],a=n[2],f=this.anchor.reflectionIn(e).elements,l=r+o,c=i+u,h=s+a,p=e.pointClosestTo([l,c,h]).elements,d=[p[0]+(p[0]-l)-f[0],p[1]+(p[1]-c)-f[1],p[2]+(p[2]-h)-f[2]];return Sylvester.Line.create(f,d)}if(e.direction)return this.rotate(Math.PI,e);var v=e.elements||e;return Sylvester.Line.create(this.anchor.reflectionIn([v[0],v[1],v[2]||0]),this.direction)},setVectors:function(e,t){e=Sylvester.Vector.create(e),t=Sylvester.Vector.create(t),e.elements.length===2&&e.elements.push(0),t.elements.length===2&&t.elements.push(0);if(e.elements.length>3||t.elements.length>3)return null;var n=t.modulus();return n===0?null:(this.anchor=e,this.direction=Sylvester.Vector.create([t.elements[0]/n,t.elements[1]/n,t.elements[2]/n]),this)}},Sylvester.Line.create=function(e,t){var n=new Sylvester.Line;return n.setVectors(e,t)};var $L=Sylvester.Line.create;Sylvester.Line.X=Sylvester.Line.create(Sylvester.Vector.Zero(3),Sylvester.Vector.i),Sylvester.Line.Y=Sylvester.Line.create(Sylvester.Vector.Zero(3),Sylvester.Vector.j),Sylvester.Line.Z=Sylvester.Line.create(Sylvester.Vector.Zero(3),Sylvester.Vector.k),Sylvester.Line.Segment=function(){},Sylvester.Line.Segment.prototype={eql:function(e){return this.start.eql(e.start)&&this.end.eql(e.end)||this.start.eql(e.end)&&this.end.eql(e.start)},dup:function(){return Sylvester.Line.Segment.create(this.start,this.end)},length:function(){var e=this.start.elements,t=this.end.elements,n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(n*n+r*r+i*i)},toVector:function(){var e=this.start.elements,t=this.end.elements;return Sylvester.Vector.create([t[0]-e[0],t[1]-e[1],t[2]-e[2]])},midpoint:function(){var e=this.start.elements,t=this.end.elements;return Sylvester.Vector.create([(t[0]+e[0])/2,(t[1]+e[1])/2,(t[2]+e[2])/2])},bisectingPlane:function(){return Sylvester.Plane.create(this.midpoint(),this.toVector())},translate:function(e){var t=e.elements||e,n=this.start.elements,r=this.end.elements;return Sylvester.Line.Segment.create([n[0]+t[0],n[1]+t[1],n[2]+(t[2]||0)],[r[0]+t[0],r[1]+t[1],r[2]+(t[2]||0)])},isParallelTo:function(e){return this.line.isParallelTo(e)},distanceFrom:function(e){var t=this.pointClosestTo(e);return t===null?null:t.distanceFrom(e)},contains:function(e){if(e.start&&e.end)return this.contains(e.start)&&this.contains(e.end);var t=(e.elements||e).slice();t.length===2&&t.push(0);if(this.start.eql(t))return!0;var n=this.start.elements,r=Sylvester.Vector.create([n[0]-t[0],n[1]-t[1],n[2]-(t[2]||0)]),i=this.toVector();return r.isAntiparallelTo(i)&&r.modulus()<=i.modulus()},intersects:function(e){return this.intersectionWith(e)!==null},intersectionWith:function(e){if(!this.line.intersects(e))return null;var t=this.line.intersectionWith(e);return this.contains(t)?t:null},pointClosestTo:function(e){if(e.normal){var t=this.line.intersectionWith(e);return t===null?null:this.pointClosestTo(t)}var n=this.line.pointClosestTo(e);return n===null?null:this.contains(n)?n:(this.line.positionOf(n)<0?this.start:this.end).dup()},setPoints:function(e,t){return e=Sylvester.Vector.create(e).to3D(),t=Sylvester.Vector.create(t).to3D(),e===null||t===null?null:(this.line=Sylvester.Line.create(e,t.subtract(e)),this.start=e,this.end=t,this)}},Sylvester.Line.Segment.create=function(e,t){var n=new Sylvester.Line.Segment;return n.setPoints(e,t)},Sylvester.Plane=function(){},Sylvester.Plane.prototype={eql:function(e){return this.contains(e.anchor)&&this.isParallelTo(e)},dup:function(){return Sylvester.Plane.create(this.anchor,this.normal)},translate:function(e){var t=e.elements||e;return Sylvester.Plane.create([this.anchor.elements[0]+t[0],this.anchor.elements[1]+t[1],this.anchor.elements[2]+(t[2]||0)],this.normal)},isParallelTo:function(e){var t;return e.normal?(t=this.normal.angleFrom(e.normal),Math.abs(t)<=Sylvester.precision||Math.abs(Math.PI-t)<=Sylvester.precision):e.direction?this.normal.isPerpendicularTo(e.direction):null},isPerpendicularTo:function(e){var t=this.normal.angleFrom(e.normal);return Math.abs(Math.PI/2-t)<=Sylvester.precision},distanceFrom:function(e){if(this.intersects(e)||this.contains(e))return 0;if(e.anchor){var t=this.anchor.elements,n=e.anchor.elements,r=this.normal.elements;return Math.abs((t[0]-n[0])*r[0]+(t[1]-n[1])*r[1]+(t[2]-n[2])*r[2])}var i=e.elements||e,t=this.anchor.elements,r=this.normal.elements;return Math.abs((t[0]-i[0])*r[0]+(t[1]-i[1])*r[1]+(t[2]-(i[2]||0))*r[2])},contains:function(e){if(e.normal)return null;if(e.direction)return this.contains(e.anchor)&&this.contains(e.anchor.add(e.direction));var t=e.elements||e,n=this.anchor.elements,r=this.normal.elements,i=Math.abs(r[0]*(n[0]-t[0])+r[1]*(n[1]-t[1])+r[2]*(n[2]-(t[2]||0)));return i<=Sylvester.precision},intersects:function(e){return typeof e.direction=="undefined"&&typeof e.normal=="undefined"?null:!this.isParallelTo(e)},intersectionWith:function(e){if(!this.intersects(e))return null;if(e.direction){var t=e.anchor.elements,n=e.direction.elements,r=this.anchor.elements,i=this.normal.elements,s=(i[0]*(r[0]-t[0])+i[1]*(r[1]-t[1])+i[2]*(r[2]-t[2]))/(i[0]*n[0]+i[1]*n[1]+i[2]*n[2]);return Sylvester.Vector.create([t[0]+n[0]*s,t[1]+n[1]*s,t[2]+n[2]*s])}if(e.normal){var o=this.normal.cross(e.normal).toUnitVector(),i=this.normal.elements,t=this.anchor.elements,u=e.normal.elements,a=e.anchor.elements,f=Sylvester.Matrix.Zero(2,2),l=0;while(f.isSingular())l++,f=Sylvester.Matrix.create([[i[l%3],i[(l+1)%3]],[u[l%3],u[(l+1)%3]]]);var c=f.inverse().elements,h=i[0]*t[0]+i[1]*t[1]+i[2]*t[2],p=u[0]*a[0]+u[1]*a[1]+u[2]*a[2],d=[c[0][0]*h+c[0][1]*p,c[1][0]*h+c[1][1]*p],v=[];for(var m=1;m<=3;m++)v.push(l===m?0:d[(m+(5-l)%3)%3]);return Sylvester.Line.create(v,o)}},pointClosestTo:function(e){var t=e.elements||e,n=this.anchor.elements,r=this.normal.elements,i=(n[0]-t[0])*r[0]+(n[1]-t[1])*r[1]+(n[2]-(t[2]||0))*r[2];return Sylvester.Vector.create([t[0]+r[0]*i,t[1]+r[1]*i,(t[2]||0)+r[2]*i])},rotate:function(e,t){var n=e.determinant?e.elements:Sylvester.Matrix.Rotation(e,t.direction).elements,r=t.pointClosestTo(this.anchor).elements,i=this.anchor.elements,s=this.normal.elements,o=r[0],u=r[1],a=r[2],f=i[0],l=i[1],c=i[2],h=f-o,p=l-u,d=c-a;return Sylvester.Plane.create([o+n[0][0]*h+n[0][1]*p+n[0][2]*d,u+n[1][0]*h+n[1][1]*p+n[1][2]*d,a+n[2][0]*h+n[2][1]*p+n[2][2]*d],[n[0][0]*s[0]+n[0][1]*s[1]+n[0][2]*s[2],n[1][0]*s[0]+n[1][1]*s[1]+n[1][2]*s[2],n[2][0]*s[0]+n[2][1]*s[1]+n[2][2]*s[2]])},reflectionIn:function(e){if(e.normal){var t=this.anchor.elements,n=this.normal.elements,r=t[0],i=t[1],s=t[2],o=n[0],u=n[1],a=n[2],f=this.anchor.reflectionIn(e).elements,l=r+o,c=i+u,h=s+a,p=e.pointClosestTo([l,c,h]).elements,d=[p[0]+(p[0]-l)-f[0],p[1]+(p[1]-c)-f[1],p[2]+(p[2]-h)-f[2]];return Sylvester.Plane.create(f,d)}if(e.direction)return this.rotate(Math.PI,e);var v=e.elements||e;return Sylvester.Plane.create(this.anchor.reflectionIn([v[0],v[1],v[2]||0]),this.normal)},setVectors:function(e,t,n){e=Sylvester.Vector.create(e),e=e.to3D();if(e===null)return null;t=Sylvester.Vector.create(t),t=t.to3D();if(t===null)return null;if(typeof n=="undefined")n=null;else{n=Sylvester.Vector.create(n),n=n.to3D();if(n===null)return null}var r=e.elements[0],i=e.elements[1],s=e.elements[2],o=t.elements[0],u=t.elements[1],a=t.elements[2],f,l;if(n!==null){var c=n.elements[0],h=n.elements[1],p=n.elements[2];f=Sylvester.Vector.create([(u-i)*(p-s)-(a-s)*(h-i),(a-s)*(c-r)-(o-r)*(p-s),(o-r)*(h-i)-(u-i)*(c-r)]),l=f.modulus();if(l===0)return null;f=Sylvester.Vector.create([f.elements[0]/l,f.elements[1]/l,f.elements[2]/l])}else{l=Math.sqrt(o*o+u*u+a*a);if(l===0)return null;f=Sylvester.Vector.create([t.elements[0]/l,t.elements[1]/l,t.elements[2]/l])}return this.anchor=e,this.normal=f,this}},Sylvester.Plane.create=function(e,t,n){var r=new Sylvester.Plane;return r.setVectors(e,t,n)};var $P=Sylvester.Plane.create;Sylvester.Plane.XY=Sylvester.Plane.create(Sylvester.Vector.Zero(3),Sylvester.Vector.k),Sylvester.Plane.YZ=Sylvester.Plane.create(Sylvester.Vector.Zero(3),Sylvester.Vector.i),Sylvester.Plane.ZX=Sylvester.Plane.create(Sylvester.Vector.Zero(3),Sylvester.Vector.j),Sylvester.Plane.YX=Sylvester.Plane.XY,Sylvester.Plane.ZY=Sylvester.Plane.YZ,Sylvester.Plane.XZ=Sylvester.Plane.ZX,Sylvester.Plane.fromPoints=function(e){var t=e.length,n=[],r,i,s,o,u,a,f,l,c,h,p=Sylvester.Vector.Zero(3);for(r=0;r<t;r++){i=Sylvester.Vector.create(e[r]).to3D();if(i===null)return null;n.push(i),s=n.length;if(s>2){u=n[s-1].elements,a=n[s-2].elements,f=n[s-3].elements,o=Sylvester.Vector.create([(u[1]-a[1])*(f[2]-a[2])-(u[2]-a[2])*(f[1]-a[1]),(u[2]-a[2])*(f[0]-a[0])-(u[0]-a[0])*(f[2]-a[2]),(u[0]-a[0])*(f[1]-a[1])-(u[1]-a[1])*(f[0]-a[0])]).toUnitVector();if(s>3){c=o.angleFrom(h);if(c!==null&&!(Math.abs(c)<=Sylvester.precision||Math.abs(c-Math.PI)<=Sylvester.precision))return null}p=p.add(o),h=o}}return u=n[1].elements,a=n[0].elements,f=n[s-1].elements,l=n[s-2].elements,p=p.add(Sylvester.Vector.create([(u[1]-a[1])*(f[2]-a[2])-(u[2]-a[2])*(f[1]-a[1]),(u[2]-a[2])*(f[0]-a[0])-(u[0]-a[0])*(f[2]-a[2]),(u[0]-a[0])*(f[1]-a[1])-(u[1]-a[1])*(f[0]-a[0])]).toUnitVector()).add(Sylvester.Vector.create([(a[1]-f[1])*(l[2]-f[2])-(a[2]-f[2])*(l[1]-f[1]),(a[2]-f[2])*(l[0]-f[0])-(a[0]-f[0])*(l[2]-f[2]),(a[0]-f[0])*(l[1]-f[1])-(a[1]-f[1])*(l[0]-f[0])]).toUnitVector()),Sylvester.Plane.create(n[0],p)},Sylvester.Polygon=function(){},Sylvester.Polygon.prototype={v:function(e){return this.vertices.at(e-1).data},nodeFor:function(e){return this.vertices.withData(e)},dup:function(){return Sylvester.Polygon.create(this.vertices,this.plane)},translate:function(e){var t=e.elements||e;return this.vertices.each(function(e){var n=e.data.elements;e.data.setElements([n[0]+t[0],n[1]+t[1],n[2]+(t[2]||0)])}),this.plane=this.plane.translate(e),this.updateTrianglePlanes(function(t){return t.translate(e)}),this},rotate:function(e,t){var n=Sylvester.Matrix.Rotation(e,t.direction);return this.vertices.each(function(e){e.data.setElements(e.data.rotate(n,t).elements)}),this.plane=this.plane.rotate(n,t),this.updateTrianglePlanes(function(e){return e.rotate(n,t)}),this},scale:function(e,t){var n=t.elements||t;this.vertices.each(function(t){var r=t.data.elements;t.data.setElements([n[0]+e*(r[0]-n[0]),n[1]+e*(r[1]-n[1]),(n[2]||0)+e*(r[2]-(n[2]||0))])});var r=this.vertices.first.data;return this.plane.anchor.setElements(r),this.updateTrianglePlanes(function(e){return Sylvester.Plane.create(r,e.normal)}),this},updateTrianglePlanes:function(e){var t;if(this.cached.triangles!==null){t=this.cached.triangles.length;while(t--)this.cached.triangles[t].plane=e(this.cached.triangles[t].plane)}if(this.cached.surfaceIntegralElements!==null){t=this.cached.surfaceIntegralElements.length;while(t--)this.cached.surfaceIntegralElements[t].plane=e(this.cached.surfaceIntegralElements[t].plane)}},isTriangle:function(){return this.vertices.length===3},trianglesForSurfaceIntegral:function(){if(this.cached.surfaceIntegralElements!==null)return this.cached.surfaceIntegralElements;var e=[],t=this.vertices.first.data,n=this.plane;return this.vertices.each(function(r,i){if(i<2)return;var s=[t,r.prev.data,r.data];e.push(Sylvester.Polygon.create(s,Sylvester.Plane.fromPoints(s)||n))}),this.setCache("surfaceIntegralElements",e)},area:function(){if(this.isTriangle()){var e=this.vertices.first,t=e.next,n=t.next;return e=e.data.elements,t=t.data.elements,n=n.data.elements,.5*Sylvester.Vector.create([(e[1]-t[1])*(n[2]-t[2])-(e[2]-t[2])*(n[1]-t[1]),(e[2]-t[2])*(n[0]-t[0])-(e[0]-t[0])*(n[2]-t[2]),(e[0]-t[0])*(n[1]-t[1])-(e[1]-t[1])*(n[0]-t[0])]).modulus()}var r=this.trianglesForSurfaceIntegral(),i=0,s=r.length;while(s--)i+=r[s].area()*r[s].plane.normal.dot(this.plane.normal);return i},centroid
:function(){if(this.isTriangle()){var e=this.v(1).elements,t=this.v(2).elements,n=this.v(3).elements;return Sylvester.Vector.create([(e[0]+t[0]+n[0])/3,(e[1]+t[1]+n[1])/3,(e[2]+t[2]+n[2])/3])}var e,r=0,i=Sylvester.Vector.Zero(3),s,n,o=this.trianglesForSurfaceIntegral(),u=o.length;while(u--)e=o[u].area()*o[u].plane.normal.dot(this.plane.normal),r+=e,s=i.elements,n=o[u].centroid().elements,i.setElements([s[0]+n[0]*e,s[1]+n[1]*e,s[2]+n[2]*e]);return i.x(1/r)},projectionOn:function(e){var t=[];return this.vertices.each(function(n){t.push(e.pointClosestTo(n.data))}),Sylvester.Polygon.create(t)},removeVertex:function(e){if(this.isTriangle())return;var t=this.nodeFor(e);if(t===null)return null;this.clearCache();var n=t.prev,r=t.next,i=n.data.isConvex(this),s=r.data.isConvex(this);return t.data.isConvex(this)?this.convexVertices.remove(this.convexVertices.withData(t.data)):this.reflexVertices.remove(this.reflexVertices.withData(t.data)),this.vertices.remove(t),i!==n.data.isConvex(this)&&(i?(this.convexVertices.remove(this.convexVertices.withData(n.data)),this.reflexVertices.append(new Sylvester.LinkedList.Node(n.data))):(this.reflexVertices.remove(this.reflexVertices.withData(n.data)),this.convexVertices.append(new Sylvester.LinkedList.Node(n.data)))),s!==r.data.isConvex(this)&&(s?(this.convexVertices.remove(this.convexVertices.withData(r.data)),this.reflexVertices.append(new Sylvester.LinkedList.Node(r.data))):(this.reflexVertices.remove(this.reflexVertices.withData(r.data)),this.convexVertices.append(new Sylvester.LinkedList.Node(r.data)))),this},contains:function(e){return this.containsByWindingNumber(e)},containsByWindingNumber:function(e){var t=e.elements||e;if(!this.plane.contains(t))return!1;if(this.hasEdgeContaining(t))return!1;var n,r,i,s,o=0,u,a=0,f=this;return this.vertices.each(function(e){n=e.data.elements,r=e.next.data.elements,i=Sylvester.Vector.create([n[0]-t[0],n[1]-t[1],n[2]-(t[2]||0)]),s=Sylvester.Vector.create([r[0]-t[0],r[1]-t[1],r[2]-(t[2]||0)]),u=i.angleFrom(s);if(u===null||u===0)return;o+=(i.cross(s).isParallelTo(f.plane.normal)?1:-1)*u,o>=2*Math.PI-Sylvester.precision&&(a++,o-=2*Math.PI),o<=-2*Math.PI+Sylvester.precision&&(a--,o+=2*Math.PI)}),a!==0},hasEdgeContaining:function(e){var t=e.elements||e,n=!1;return this.vertices.each(function(e){Sylvester.Line.Segment.create(e.data,e.next.data).contains(t)&&(n=!0)}),n},toTriangles:function(){return this.cached.triangles!==null?this.cached.triangles:this.setCache("triangles",this.triangulateByEarClipping())},triangulateByEarClipping:function(){var e=this.dup(),t=[],n,r,i,s;while(!e.isTriangle()){n=!1;while(!n)n=!0,r=e.convexVertices.randomNode(),i=e.vertices.withData(r.data),s=Sylvester.Polygon.create([i.data,i.next.data,i.prev.data],this.plane),e.reflexVertices.each(function(e){e.data!==i.prev.data&&e.data!==i.next.data&&(s.contains(e.data)||s.hasEdgeContaining(e.data))&&(n=!1)});t.push(s),e.removeVertex(i.data)}return t.push(Sylvester.Polygon.create(e.vertices,this.plane)),t},setVertices:function(e,t){var n=e.toArray?e.toArray():e;this.plane=t&&t.normal?t.dup():Sylvester.Plane.fromPoints(n);if(this.plane===null)return null;this.vertices=new Sylvester.LinkedList.Circular;var r=n.length,i;while(r--)i=n[r].isConvex?n[r]:new Sylvester.Polygon.Vertex(n[r]),this.vertices.prepend(new Sylvester.LinkedList.Node(i));return this.clearCache(),this.populateVertexTypeLists(),this},populateVertexTypeLists:function(){this.convexVertices=new Sylvester.LinkedList.Circular,this.reflexVertices=new Sylvester.LinkedList.Circular;var e=this;this.vertices.each(function(t){e[t.data.type(e)+"Vertices"].append(new Sylvester.LinkedList.Node(t.data))})},copyVertices:function(){this.clearCache(),this.vertices.each(function(e){e.data=new Sylvester.Polygon.Vertex(e.data)}),this.populateVertexTypeLists()},clearCache:function(){this.cached={triangles:null,surfaceIntegralElements:null}},setCache:function(e,t){return this.cached[e]=t,t},inspect:function(){var e=[];return this.vertices.each(function(t){e.push(t.data.inspect())}),e.join(" -> ")}},Sylvester.Polygon.create=function(e,t){var n=new Sylvester.Polygon;return n.setVertices(e,t)},Sylvester.Polygon.Vertex=function(e){this.setElements(e),this.elements.length===2&&this.elements.push(0);if(this.elements.length!==3)return null},Sylvester.Polygon.Vertex.prototype=new Sylvester.Vector,Sylvester.Polygon.Vertex.prototype.isConvex=function(e){var t=e.nodeFor(this);if(t===null)return null;var n=t.prev.data,r=t.next.data,i=r.subtract(this),s=n.subtract(this),o=i.angleFrom(s);return o<=Sylvester.precision?!0:Math.abs(o-Math.PI)<=Sylvester.precision?!1:i.cross(s).dot(e.plane.normal)>0},Sylvester.Polygon.Vertex.prototype.isReflex=function(e){var t=this.isConvex(e);return t===null?null:!t},Sylvester.Polygon.Vertex.prototype.type=function(e){var t=this.isConvex(e);return t===null?null:t?"convex":"reflex"},Sylvester.Polygon.Vertex.convert=function(e){var t=e.toArray?e.toArray():e,n=[],r=t.length;for(var i=0;i<r;i++)n.push(new Sylvester.Polygon.Vertex(t[i]));return n},Sylvester.LinkedList=function(){},Sylvester.LinkedList.prototype={length:0,first:null,last:null,forEach:function(e,t){var n=this.first,r=this.length;for(var i=0;i<r;i++)e.call(t,n,i),n=n.next},at:function(e){if(e>=0&&e<this.length){var t=this.first;while(e--)t=t.next;return t}return null},randomNode:function(){var e=Math.floor(Math.random()*this.length);return this.at(e)},toArray:function(){var e=[],t=this.first,n=this.length;while(n--)e.push(t.data||t),t=t.next;return e}},Sylvester.LinkedList.prototype.each=Sylvester.LinkedList.prototype.forEach,Sylvester.LinkedList.Node=function(e){this.prev=null,this.next=null,this.data=e},Sylvester.LinkedList.Circular=function(){},Sylvester.LinkedList.Circular.Methods={append:function(e){this.first===null?(e.prev=e,e.next=e,this.first=e,this.last=e):(e.prev=this.last,e.next=this.first,this.first.prev=e,this.last.next=e,this.last=e),this.length++},prepend:function(e){if(this.first===null){this.append(e);return}e.prev=this.last,e.next=this.first,this.first.prev=e,this.last.next=e,this.first=e,this.length++},insertAfter:function(e,t){t.prev=e,t.next=e.next,e.next.prev=t,e.next=t,t.prev===this.last&&(this.last=t),this.length++},insertBefore:function(e,t){t.prev=e.prev,t.next=e,e.prev.next=t,e.prev=t,t.next===this.first&&(this.first=t),this.length++},remove:function(e){this.length>1?(e.prev.next=e.next,e.next.prev=e.prev,e===this.first&&(this.first=e.next),e===this.last&&(this.last=e.prev)):(this.first=null,this.last=null),e.prev=null,e.next=null,this.length--},withData:function(e){var t=this.first,n=this.last,r=Math.ceil(this.length/2);while(r--){if(t.data===e)return t;if(n.data===e)return n;t=t.next,n=n.prev}return null}},Sylvester.LinkedList.Circular.prototype=new Sylvester.LinkedList;for(var method in Sylvester.LinkedList.Circular.Methods)Sylvester.LinkedList.Circular.prototype[method]=Sylvester.LinkedList.Circular.Methods[method];Sylvester.LinkedList.Circular.fromArray=function(e,t){var n=new Sylvester.LinkedList.Circular,r=e.length;while(r--)n.prepend(t?new Sylvester.LinkedList.Node(e[r]):e[r]);return n},typeof require=="function"&&typeof module=="object"?module.exports=Sylvester:(this.Line=Sylvester.Line,this.Matrix=Sylvester.Matrix,this.Plane=Sylvester.Plane,this.Polygon=Sylvester.Polygon,this.Vector=Sylvester.Vector);